
{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Ajax": {
		"prefix": "ajax",
		"body": [
			"$.ajax({",
			"	type: \"POST\",",
			"	url: $1,",
			"	data: $2,",
			"	success: function (r) {",
			"	  if (r == 1) {",
			"		$3",
			"	  }else if (r == 2) {",
			"		$4",
			"	  }",
			"	   else {",
			"		$5",
			"	  }",
			"	},",
			"  });",
			"return false;",
			"$2",
		],
		"description": "Log output to console"
	},
	"Create id": {
		"prefix": "id",
		"body": [
			"$(\"#$1\")$2",
		],
		"description": "Log output to console"
	},
	"Create click funtion": {
		"prefix": ".click",
		"body": [
			".click(function() {$2});",
		],
		"description": "NelsonDJCR"
	},
	"Create alert": {
		"prefix": "alert",
		"body": [
			"alert(\"$1\");",
			"return false;",
		],
		"description": "NelsonDJCR"
	},
	"val": {
		"prefix": ".val",
		"body": [
			".val($1)",
		],
		"description": "NelsonDJCR"
	},
	"this": {
		"prefix": "this",
		"body": [
			"$(this)$1",
		],
		"description": "NelsonDJCR"
	},
	".data": {
		"prefix": ".data",
		"body": [
			".data('$1')",
		],
		"description": "NelsonDJCR"
	},
	"base64": {
		"prefix": "base64",
		"body": [
			"btoa('$1');",
		],
		"description": "NelsonDJCR"
	},
	"return": {
		"prefix": "return",
		"body": [
			"return false;$1",
		],
		"description": "NelsonDJCR"
	},
	"post": {
		"prefix": "post",
		"body": [
			"$.post('$1',",
			"{",
			"	$2",
			"}).done(function(e){",
			"	alert(e)",
			"	return false;",
			"});",
		],
		"description": "$.post"
	},
	"attr": {
		"prefix": "attr",
		"body": [
			"$(this)",
		],
		"description": "$.post"
	},
	"csrf": {
		"prefix": "csrf",
		"body": [
			"_token: \"{{ csrf_token() }}\"",
		],
		"description": "BLADE first"
	},
	"console": {
		"prefix": "console",
		"body": [
			"console.log('$1');",
			"return false;",
		],
		"description": "BLADE first"
	},
	"jsid": {
		"prefix": "docid",
		"body": [
			"document.getElementById('$1');",
		],
		"description": "BLADE first"
	},
	"jsquery": {
		"prefix": "docquery",
		"body": [
			"document.querySelector('$1');",
		],
		"description": "BLADE first"
	},
	"serialize": {
		"prefix": ".serialize()",
		"body": [
			".serialize()",
		],
		"description": ".serialize()"
	},
	"css": {
		"prefix": ".css()",
		"body": [
			".css('$1','$2')",
		],
		"description": ".css()"
	},
	"body": {
		"prefix": "body.",
		"body": [
			"$('body').on('click', '.$1', function() {",
			"	$2",
			"});",
		],
		"description": ".css()"
	},
	"location": {
		"prefix": "location.",
		"body": [
			"window.location.href = '$1'"
		],
		"description": ".css()"
	},
}